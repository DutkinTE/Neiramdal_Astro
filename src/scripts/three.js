import { onMount } from "solid-js";
import * as THREE from "three";
import { GLTFLoader } from "three/examples/jsm/loaders/GLTFLoader";

requestAnimationFrame(() => {
    console.log(THREE);

    const container = document.getElementById("three-container");
    if (!container) {
        return;
    }


    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
    camera.position.set(0, 1, 5);

    const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });
    renderer.setSize(window.innerWidth, window.innerHeight);
    container.appendChild(renderer.domElement);

    const ambientLight = new THREE.AmbientLight(0xffffff, 2);
    scene.add(ambientLight);

    const directionalLight = new THREE.DirectionalLight(0xffffff, 3);
    directionalLight.position.set(5, 5, 5);
    scene.add(directionalLight);


    const loader = new GLTFLoader();
    loader.load(
        "/models/NeiramdalRoboRabbit.glb", // –ü—É—Ç—å –∫ –º–æ–¥–µ–ª–∏
        (gltf) => {
            console.log("‚úÖ –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞!", gltf);
            const model = gltf.scene;

            // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –º–æ–¥–µ–ª—å –≤ 2 —Ä–∞–∑–∞
            model.scale.set(4, 4, 4);  // –ú–∞—Å—à—Ç–∞–± –ø–æ –æ—Å—è–º X, Y –∏ Z
            model.position.set(0, -2, 0); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –º–æ–¥–µ–ª–∏ –≤ —Ü–µ–Ω—Ç—Ä–µ —Å—Ü–µ–Ω—ã

            scene.add(model);
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–≤–∏–∂–µ–Ω–∏—è –º—ã—à–∏
            document.addEventListener('mousemove', (event) => {
                // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –º—ã—à–∏
                const mouseX = (event.clientX / window.innerWidth) * 2 - 1;
                const mouseY = -(event.clientY / window.innerHeight) * 2 + 1;
      
                // –í—ã—á–∏—Å–ª—è–µ–º —É–≥–ª—ã –¥–ª—è –ø–æ–≤–æ—Ä–æ—Ç–∞ –º–æ–¥–µ–ª–∏ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ (–æ—Å—å Y) –∏ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ (–æ—Å—å X)
                const rotationX = -mouseY * Math.PI / 6;  // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —É–≥–æ–ª, —É–º–Ω–æ–∂–∏–≤ –Ω–∞ Math.PI / 6 (30 –≥—Ä–∞–¥—É—Å–æ–≤)
                const rotationY = mouseX * Math.PI / 3;  // –£–≥–æ–ª –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ –¥–ª—è –≤—Ä–∞—â–µ–Ω–∏—è
      
                // –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Ä–∞—â–µ–Ω–∏–µ –∫ –º–æ–¥–µ–ª–∏
                model.rotation.x = rotationX;  // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –≤—Ä–∞—â–µ–Ω–∏–µ
                model.rotation.y = rotationY;  // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ –≤—Ä–∞—â–µ–Ω–∏–µ
              });

            animate();
        },
        (xhr) => {
            console.log(`üì• –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏: ${(xhr.loaded / xhr.total) * 100}%`);
        },
        (error) => {
            console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏:", error);
        }
    );

    function animate() {
        requestAnimationFrame(animate);
        renderer.render(scene, camera);
    }

    animate();
});